<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <security:global-method-security pre-post-annotations="enabled"/>

    <security:http use-expressions="true">
        <security:intercept-url pattern="/members" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"  />

        <security:form-login
                login-page="/login"
                default-target-url="/welcome"
                always-use-default-target="true"
                authentication-failure-url="/login-failed"
        />

        <security:logout logout-success-url="/logout"
                         delete-cookies="JSESSIONID"
                         invalidate-session="true"
        />

        <security:remember-me data-source-ref="dataSource"
                              token-validity-seconds="86400" remember-me-parameter="keepMe"/>
    </security:http>


    <!-- Database security "custom queries are because we have used our own schema...	-->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder ref="passwordEncoder" />
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="select username,password,enabled from credentials where username=?"
                    authorities-by-username-query="select u1.username, u2.authority from credentials u1, authority u2
				                                                     where u1.username = u2.username and u1.username =?" />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" >
    </bean>
</beans>
